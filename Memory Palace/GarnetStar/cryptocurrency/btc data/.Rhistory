nordhaus <- read_docx("Problem set, Nordhaus, March 2018.docx")
df_S_823 <- c("USF", "6.8\%", 3250, 1461.14, 4711.14)
df_S_823 <- c("USF", "6.8%", 3250, 1461.14, 4711.14)
df_S_823 <- as.dataframe(c("USF", "6.8%", 3250, 1461.14, 4711.14))
df_S_823 <- as.data.frame(c("USF", "6.8%", 3250, 1461.14, 4711.14))
View(df_S_823)
df_S_823 <- matrix(c("12018.04.07", "USF", "6.8%", 3250, 1461.14, 4711.14), ncol=6, byrow=TRUE)
colnames(df_S_823) <- c("Date", "Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_823) <- c("12018.04.07")
df_S_823 <- as.table(df_S_823)
df_S_823
colnames(df_S_823) <- c("Uni", "Int", "Principal", "Interest", "Total")
df_S_823 <- matrix(c("USF", "6.8%", 3250, 1461.14, 4711.14), ncol=5, byrow=TRUE)
colnames(df_S_823) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_823) <- c("12018.04.07")
df_S_823 <- as.table(df_S_823)
df_S_823
df_S_823 <- as.table(df_S_823); df_S_823
df_S_823 <- matrix(c("USF", "6.8%", 3250, 1461.14, 4711.14,
"USF","6.8", 12, 23, 3), ncol=5, byrow=TRUE)
colnames(df_S_823) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_823) <- c("12018.04.07", "2")
df_S_823 <- as.table(df_S_823); df_S_823
df_S_823 <- matrix(c("USF", "6.8%", 3250, 1461.14, 4711.14,), ncol=5, byrow=TRUE)
colnames(df_S_823) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_823) <- c("12018.04.07")
df_S_823 <- as.table(df_S_823); df_S_823
df_S_823 <- matrix(c("USF", "6.8%", 3250, 1461.14, 4711.14), ncol=5, byrow=TRUE)
colnames(df_S_823) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_823) <- c("12018.04.07")
df_S_823 <- as.table(df_S_823); df_S_823
df_S_824 <- matrix(c("USF", "6.8%", 3250, 1376.39, 4626.39), ncol=5, byrow=TRUE)
colnames(df_S_824) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_824) <- c("12018.04.07")
df_S_824 <- as.table(df_S_824); df_S_824
df_S_827 <- matrix(c("USF", "3.86%", 3750, 666.07, 4416.07), ncol=5, byrow=TRUE)
colnames(df_S_827) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_827) <- c("12018.04.07")
df_S_827 <- as.table(df_S_827); df_S_827
df_S_828 <- matrix(c("USF", "3.86%", 3750, 613.32, 4363.32), ncol=5, byrow=TRUE)
colnames(df_S_828) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_828) <- c("12018.04.07")
df_S_828 <- as.table(df_S_828); df_S_828
4363.32+4416.07+4626.39+4711.14
df_S_830 <- matrix(c("NEU", "6.21%", 20500, 3768.48, 24268.46), ncol=5, byrow=TRUE)
df_S_830 <- matrix(c("NEU", "6.21%", 20500, 3768.48, 24268.46), ncol=5, byrow=TRUE)
colnames(df_S_830) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_830) <- c("12018.04.07")
df_S_830 <- as.table(df_S_830); df_S_830
df_S_832 <- matrix(c("NEU", "5.84%", 20500, 2834.03, 23334.03), ncol=5, byrow=TRUE)
colnames(df_S_832) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_832) <- c("12018.04.07")
df_S_832 <- as.table(df_S_832); df_S_832
df_S_834 <- matrix(c("DEIS", "5.31%", 15000, 1150.74, 16150.74), ncol=5, byrow=TRUE)
colnames(df_S_834) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_834) <- c("12018.04.07")
df_S_834 <- as.table(df_S_834); df_S_834
df_S_835 <- matrix(c("DEIS", "6.00%", 20500, 520.63, 21020.63), ncol=5, byrow=TRUE)
colnames(df_S_835) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_S_835) <- c("12018.04.07")
df_S_835 <- as.table(df_S_835); df_S_835
colnames(df_G_829) <- c("Uni", "Int", "Principal", "Interest", "Total")
df_G_829 <- matrix(c("NEU", "7.21%", 9000, 2074.61, 11074.61), ncol=5, byrow=TRUE)
colnames(df_G_829) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_G_829) <- c("12018.04.07")
df_G_829 <- as.table(df_G_829); df_G_829
df_G_831 <- matrix(c("NEU", "6.84%", 15000, 1606.04, 16606.14), ncol=5, byrow=TRUE)
colnames(df_G_831) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_G_831) <- c("12018.04.07")
df_G_831 <- as.table(df_G_831); df_G_831
df_G_833 <- matrix(c("NEU", "6.84%", 3533.17, 483.41, 4017.18), ncol=5, byrow=TRUE)
colnames(df_G_833) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_G_833) <- c("12018.04.07")
df_G_833 <- as.table(df_G_833); df_G_833
df_NEU <- matrix(c("NEU", "?%", 10000, "?", "10000+x"), ncol=5, byrow=TRUE)
colnames(df_NEU) <- c("Uni", "Int", "Principal", "Interest", "Total")
rownames(df_NEU) <- c("12018.04.07")
df_NEU <- as.table(df_NEU); df_NEU
df_G_829[5]
as.numeric(df_G_829[5])
11074.61+16606.14+4017.18+4711.14+4626.39+4416.07+4363.32+24268.48+23334.03+16150.74+21020.63
total <- 11074.61+16606.14+4017.18+4711.14+4626.39+4416.07+4363.32+24268.48+23334.03+16150.74+21020.63
1885*12
library(tidyverse)
S2 <- read.csv("S2.csv")
setwd("~/GitHub/Instrumentality/Memory Palace/GarnetStar/cryptocurrency")
S2 <- read.csv("S2.csv")
# make covariance stationary
# returns
date_2 <- as.data.frame(S2[-1,"x_"]) # subset date by removing first value to match returns
returns <- as.data.frame((S2[-1,"market_price"] - S2[-nrow(S2),"market_price"])/ S2[-nrow(S2),"market_price"])
bind_1 <- cbind(date_2, returns)
names(bind_1) <- c("x", "y")
ggplot(bind_1, aes(x,y)) + geom_point()
setwd("~/GitHub/Instrumentality/Memory Palace/GarnetStar/cryptocurrency/btc data")
btc_usd <- read.csv("Bitcoin Markets (localbtcUSD).csv")
btc_cad <- read.csv("Bitcoin Markets (localbtcCAD).csv")
btc_sgd <- read.csv("Bitcoin Markets (localbtcSGD).csv")
btc_hkd <- read.csv("Bitcoin Markets (localbtcHKD).csv")
btc_mxn <- read.csv("Bitcoin Markets (localbtcMXN).csv")
btc_nxd <- read.csv("Bitcoin Markets (localbtcNZD).csv")
btc_pln <- read.csv("Bitcoin Markets (localbtcPLN).csv")
btc_rub <- read.csv("Bitcoin Markets (localbtcRUB).csv")
btc_thb <- read.csv("Bitcoin Markets (localbtcTHB).csv")
btc_ars <- read.csv("Bitcoin Markets (localbtcARS).csv")
btc_zar <- read.csv("Bitcoin Markets (localbtcZAR).csv")
btc_sek <- read.csv("Bitcoin Markets (localbtcSEK).csv")
# btc_vnd <- read.csv("Bitcoin Markets (localbtcVND).csv") # removed bc too small
btc_dkk <- read.csv("Bitcoin Markets (localbtcDKK).csv")
btc_czk <- read.csv("Bitcoin Markets (localbtcCZK).csv")
btc_inr <- read.csv("Bitcoin Markets (localbtcINR).csv")
btc_ils <- read.csv("Bitcoin Markets (localbtcILS).csv")
btc_aud <- read.csv("Bitcoin Markets (localbtcAUD).csv")
btc_nok <- read.csv("Bitcoin Markets (localbtcNOK).csv")
btc_jpy <- read.csv("Bitcoin Markets (coincheckJPY).csv")
btc_krw <- read.csv("Bitcoin Markets (korbitKRW).csv")
# chinese data doesnt ends much too soon, so didn't include this either unfortunately
# btc_cny <- read.csv("Bitcoin Markets (btcnCNY).csv") # winner but not all :(
# btc_cny2 <- read.csv("Bitcoin Markets (okcoinCNY).csv") # close second
btc_gbp <- read.csv("Bitcoin Markets (coinfloorGBP).csv")
btc_eur <- read.csv("Bitcoin Markets (krakenEUR).csv") # winner (most recent)
btc_eur2 <- read.csv("Bitcoin Markets (btceEUR).csv") # has most
btc_eur3 <- read.csv("Bitcoin Markets (bitcurexEUR).csv") # alot too
df <- cbind(btc_usd$Weighted.Price, btc_aud$Weighted.Price) # same size so OK, test data
df2 <- cbind(btc_usd[1:m,"Weighted.Price"], btc_cad[1:m,"Weighted.Price"], btc_sgd[1:m,"Weighted.Price"],
btc_hkd[1:m,"Weighted.Price"], btc_mxn[1:m,"Weighted.Price"], btc_nxd[1:m,"Weighted.Price"],
btc_pln[1:m,"Weighted.Price"], btc_rub[1:m,"Weighted.Price"], btc_thb[1:m,"Weighted.Price"],
btc_ars[1:m,"Weighted.Price"], btc_zar[1:m,"Weighted.Price"], btc_sek[1:m,"Weighted.Price"],
btc_dkk[1:m,"Weighted.Price"], btc_czk[1:m,"Weighted.Price"], btc_inr[1:m,"Weighted.Price"],
btc_ils[1:m,"Weighted.Price"], btc_aud[1:m,"Weighted.Price"], btc_nok[1:m,"Weighted.Price"],
btc_jpy[1:m,"Weighted.Price"], btc_krw[1:m,"Weighted.Price"],
btc_gbp[1:m,"Weighted.Price"], btc_eur[1:m,"Weighted.Price"]) # full 22 exchange rates
m <- 939
df2 <- cbind(btc_usd[1:m,"Weighted.Price"], btc_cad[1:m,"Weighted.Price"], btc_sgd[1:m,"Weighted.Price"],
btc_hkd[1:m,"Weighted.Price"], btc_mxn[1:m,"Weighted.Price"], btc_nxd[1:m,"Weighted.Price"],
btc_pln[1:m,"Weighted.Price"], btc_rub[1:m,"Weighted.Price"], btc_thb[1:m,"Weighted.Price"],
btc_ars[1:m,"Weighted.Price"], btc_zar[1:m,"Weighted.Price"], btc_sek[1:m,"Weighted.Price"],
btc_dkk[1:m,"Weighted.Price"], btc_czk[1:m,"Weighted.Price"], btc_inr[1:m,"Weighted.Price"],
btc_ils[1:m,"Weighted.Price"], btc_aud[1:m,"Weighted.Price"], btc_nok[1:m,"Weighted.Price"],
btc_jpy[1:m,"Weighted.Price"], btc_krw[1:m,"Weighted.Price"],
btc_gbp[1:m,"Weighted.Price"], btc_eur[1:m,"Weighted.Price"]) # full 22 exchange rates
# df3 <- ldply(c("btc_usd", "btc_aud")) .. is there an easier way to do above line?
df2[df2 == 0] <- NA # set 0's to NA (therwise when take logs will be infinity)
df3 <- na.omit(df2) # remove rows with missing data
df4 <- log(df3) # take logs to map data to clearer values
m <- dim(df4)[1] # end with 235 values
means = t(as.matrix(apply(df4,2,mean)))
X <- as.matrix(df4 - kronecker(matrix(1,m,1),means))
f <- factanal(X,factors = 3, rotation = "varimax", lower = 0.01) # try 3 factors at first
f_hat1 = X%*%f[["loadings"]]/3 # im not why equation this way, just saw some code that used this
time <- 1:m # for plotting
df_time <- as.tibble(cbind(time, f_hat1))
f[["loadings"]] # lets see loadings
ggplot(df_time, aes(time,Factor1)) + geom_line() # and see factors
ggplot(df_time, aes(time,Factor2)) + geom_line()
ggplot(df_time, aes(time,Factor3)) + geom_line() # they are pretty much the same ... only 1 factor then? hmm odd
df2 <- cbind(btc_cad[1:m,"Weighted.Price"], btc_sgd[1:m,"Weighted.Price"],
btc_hkd[1:m,"Weighted.Price"], btc_mxn[1:m,"Weighted.Price"], btc_nxd[1:m,"Weighted.Price"],
btc_pln[1:m,"Weighted.Price"], btc_rub[1:m,"Weighted.Price"], btc_thb[1:m,"Weighted.Price"],
btc_ars[1:m,"Weighted.Price"], btc_zar[1:m,"Weighted.Price"], btc_sek[1:m,"Weighted.Price"],
btc_dkk[1:m,"Weighted.Price"], btc_czk[1:m,"Weighted.Price"], btc_inr[1:m,"Weighted.Price"],
btc_ils[1:m,"Weighted.Price"], btc_aud[1:m,"Weighted.Price"], btc_nok[1:m,"Weighted.Price"],
btc_jpy[1:m,"Weighted.Price"], btc_krw[1:m,"Weighted.Price"],
btc_gbp[1:m,"Weighted.Price"], btc_eur[1:m,"Weighted.Price"]) # full 22 exchange rates
# df3 <- ldply(c("btc_usd", "btc_aud")) .. is there an easier way to do above line?
df2[df2 == 0] <- NA # set 0's to NA (therwise when take logs will be infinity)
df3 <- na.omit(df2) # remove rows with missing data
df4 <- log(df3) # take logs to map data to clearer values
m <- dim(df4)[1] # end with 235 values
means = t(as.matrix(apply(df4,2,mean)))
X <- as.matrix(df4 - kronecker(matrix(1,m,1),means))
f <- factanal(X,factors = 3, rotation = "varimax", lower = 0.01) # try 3 factors at first
f_hat1 = X%*%f[["loadings"]]/3 # im not why equation this way, just saw some code that used this
time <- 1:m # for plotting
df_time <- as.tibble(cbind(time, f_hat1))
f[["loadings"]] # lets see loadings
ggplot(df_time, aes(time,Factor1)) + geom_line() # and see factors
ggplot(df_time, aes(time,Factor2)) + geom_line()
ggplot(df_time, aes(time,Factor3)) + geom_line() # they are pretty much the same ... only 1 factor then? hmm odd
View(btc_dkk)
m2 <- size(X)[1]
m2 <- dim(X)[1]
X_half <- X[1:m2]
# chinese data doesnt ends much too soon, so didn't include this either unfortunately
btc_cny <- read.csv("Bitcoin Markets (btcnCNY).csv") # winner but not all :(
View(btc_cny)
col1 <- rnorm(100)
col2 <- rnorm(100)
fDate <- 1:100
rm(fDate)
plot_function <- function(col1, col2, xlab=NULL, ylab=NULL) {
col1 <- as.data.frame(col1)
col2 <- as.matrix(col2)
fDate <- 1:dim(col1)[1]
df <- cbind(fDate,col1,col2)
cp <- geom_line(df, aes(fDate)) + geom_line(aes(y=col1,colour="col1"))+
geom_line(aes(y=col2,colour="col2")) +
xlab('Date')+ylab('Stock price')+
scale_color_manual(name="Legend title",values=c("blue","green"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
p
}
plot_function(col1, col2)
rm(col1)
rm(col2)
x1 <- rnorm(100)
x2 <- rnorm(100)
plot_function(x1, x2)
class(col1)
col1 <- as.data.frame(x1)
col2 <- as.matrix(x1)
class(col1)
class(col2)
col1 <- as.matrix(x1)
fDate <- 1:dim(col1)[1]
df <- cbind(fDate,col1,col2)
class(fDate)
class(df)
class(df$col1)
x1 <- rnorm(100)
x2 <- rnorm(100)
fDate <- 1:100
col1 <- rnorm(100)
col2 <- rnorm(100)
fDate <- 1:100
df <- data.frame(cbind(fDate,col1,col2))
class(df)
class(df$col1)
length(col1)
class(x1)
class(x2)
fDate <- lengt(col1)
fDate <- length(col1)
fDate
df <- cbind(fDate,col1,col2)
p <- geom_line(df, aes(fDate)) + geom_line(aes(y=col1,colour="col1"))+
geom_line(aes(y=col2,colour="col2")) +
xlab('Date')+ylab('Stock price')+
scale_color_manual(name="Legend title",values=c("blue","green"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
class(df$col1)
View(df)
df <- data.frame(cbind(fDate,col1,col2))
p <- geom_line(df, aes(fDate)) + geom_line(aes(y=col1,colour="col1"))+
geom_line(aes(y=col2,colour="col2")) +
xlab('Date')+ylab('Stock price')+
scale_color_manual(name="Legend title",values=c("blue","green"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
col1 <- rnorm(100)
col2 <- rnorm(100)
fDate <- 1:100
df <- data.frame(cbind(fDate,col1,col2))
p2 <- ggplot(df,aes(fDate))+geom_line(aes(y=col1,colour="col1"))+
geom_line(aes(y=col2,colour="col2")) +
xlab('Date')+ylab('Stock price')+
scale_color_manual(name="Legend title",values=c("blue","green"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
p2
class(df)
class(df$col1)
class(df$col2)
class(df$fDate)
T <- length(col1)
fDate <- 1:T
df <- data.frame(cbind(fDate,col1,col2))
p <- geom_line(df, aes(fDate)) + geom_line(aes(y=col1,colour="col1"))+
geom_line(aes(y=col2,colour="col2")) +
xlab('Date')+ylab('Stock price')+
scale_color_manual(name="Legend title",values=c("blue","green"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
class(df$col1)
class(df$fDate)
class(df$col2)
p <- ggplot(df,aes(fDate))+geom_line(aes(y=col1,colour="col1"))+
geom_line(aes(y=col2,colour="col2")) +
xlab('Date')+ylab('Stock price')+
scale_color_manual(name="Legend title",values=c("blue","red"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
p
quick_plot <- function(x1, x2, xlab=NULL, ylab=NULL) {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="col1"))+
geom_line(aes(y=x2,colour="col2")) +
xlab('Date')+ylab('Stock price')+
scale_color_manual(name="Legend title",values=c("blue","red"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
p
}
quick_plot(col1, col2)
quick_plot(col1, col2, xlab="xish")
quick_plot <- function(x1, x2, xlab=NULL, ylab=NULL) {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="col1"))+
geom_line(aes(y=x2,colour="col2")) +
xlab(xlab)+ylab('Stock price')+
scale_color_manual(name="Legend title",values=c("blue","red"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
p
}
quick_plot(col1, col2, xlab="xish")
quick_plot <- function(x1, x2, xlab=NULL, ylab=NULL) {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="col1"))+
geom_line(aes(y=x2,colour="col2")) +
xlab(xlab)+ylab(ylab)+
scale_color_manual(name="Legend title",values=c("blue","red"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
p
}
quick_plot(col1, col2, xlab="xish")
quick_plot <- function(x1, x2, xlab=NULL, ylab=NULL, Legend_title=NULL,
label_1 = NULL, label_2 = colour1=NULL, colou2=NULL) {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="col1"))+
geom_line(aes(y=x2,colour="col2")) +
xlab(xlab)+ylab(ylab)+
scale_color_manual(name="Legend title",values=c("blue","red"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
p
}
quick_plot <- function(x1, x2, xlab=NULL, ylab=NULL, Legend_title=NULL, label_1 = NULL, label_2 = colour1=NULL, colou2=NULL) {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="col1"))+
geom_line(aes(y=x2,colour="col2")) +
xlab(xlab)+ylab(ylab)+
scale_color_manual(name="Legend title",values=c("blue","red"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
p
}
quick_plot <- function(x1, x2, xlab=NULL, ylab=NULL, Legend_title=NULL,
label_1 = NULL, label_2 = NULL, colour_1=NULL, colour_2=NULL) {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="col1"))+
geom_line(aes(y=x2,colour="col2")) +
xlab(xlab)+ylab(ylab)+
scale_color_manual(name="Legend title",values=c("blue","red"),labels=c("ibm","msft"))+
theme_bw(base_size=14)
p
}
quick_plot(col1, col2, xlab="xish")
quick_plot <- function(x1, x2, xlab=NULL, ylab=NULL, Legend_title=NULL,
label_1 = NULL, label_2 = NULL, colour_1=NULL, colour_2=NULL) {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour=x1))+
geom_line(aes(y=x2,colour=x2)) +
xlab(xlab)+ylab(ylab)+
scale_color_manual(name=Legend_title,values=c(colour_1, colour_2),labels=c(label_1, label_2))+
theme_bw(base_size=14)
p
}
quick_plot(col1, col2, xlab="xish")
quick_plot <- function(x1, x2, xlab=NULL, ylab=NULL, Legend_title=NULL,
label_1 = NULL, label_2 = NULL, colour_1=NULL, colour_2=NULL) {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="x1"))+
geom_line(aes(y=x2,colour="x2")) +
xlab(xlab)+ylab(ylab)+
scale_color_manual(name=Legend_title,values=c(colour_1, colour_2),labels=c(label_1, label_2))+
theme_bw(base_size=14)
p
}
quick_plot(col1, col2, xlab="xish")
quick_plot(col1, col2, xlab="xish", ylab="ylab", Legend_title="title", label_1 = "label", label_2 = "label2", colour_1 = "blue", colour_2 = "green")
quick_plot(col1, col2)
quick_plot(col1, col2, xlab="xish", ylab="ylab", Legend_title="title", colour_1 = "blue", colour_2 = "green")
quick_plot(col1, col2, xlab="xish", ylab="ylab", Legend_title="title")
quick_plot <- function(x1, x2, xlab=NULL, ylab=NULL, Legend_title=NULL,
label_1 = NULL, label_2 = NULL, colour_1="blue", colour_2="red") {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="x1"))+
geom_line(aes(y=x2,colour="x2")) +
xlab(xlab)+ylab(ylab)+
scale_color_manual(name=Legend_title,values=c(colour_1, colour_2),labels=c(label_1, label_2))+
theme_bw(base_size=14)
p
}
quick_plot(col1, col2)
quick_plot(col1, col2, colour_2 = "green")
quick_plot <- function(x1, x2, xlab="xlab", ylab="ylab", Legend_title="Legend Title",
label_1 = "x1", label_2 = "x2", colour_1="blue", colour_2="red") {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="x1"))+
geom_line(aes(y=x2,colour="x2")) +
xlab(xlab)+ylab(ylab)+
scale_color_manual(name=Legend_title,values=c(colour_1, colour_2),labels=c(label_1, label_2))+
theme_bw(base_size=14)
p
}
quick_plot(col1, col2, colour_2 = "green")
quick_plot(col1, col2, xlab="xish", ylab="ylab", Legend_title="title", colour_1 = "blue", colour_2 = "green")
col1 <- rnorm(100)
col2 <- rnorm(100)
quick_plot <- function(x1, x2, xlab="xlab", ylab="ylab", Legend_title="Legend Title",
label_1 = "x1", label_2 = "x2", colour_1="blue", colour_2="red") {
T <- length(x1)
fDate <- 1:T
df <- data.frame(cbind(fDate, x1, x2))
p <- ggplot(df,aes(fDate))+geom_line(aes(y=x1,colour="x1"))+
geom_line(aes(y=x2,colour="x2")) +
xlab(xlab)+ylab(ylab)+
scale_color_manual(name=Legend_title,values=c(colour_1, colour_2),labels=c(label_1, label_2))+
theme_bw(base_size=14)
p
}
quick_plot(col1, col2)
quick_plot(col1, col2, xlab="something else", ylab="ylab", Legend_title="title", colour_1 = "blue", colour_2 = "green")
quick_plot(col1, col2, xlab="Date", ylab="Stock Price", Legend_title="title",
label_1 = "ibm", label_2 = "msft", colour_1 = "blue", colour_2 = "green")
quick_plot(col1, col2, xlab="Date", ylab="Stock Price", Legend_title="title",
label_1 = "ibm", label_2 = "msft", colour_2 = "green")
qplot(x1, x2)
qplot(col1, col2)
